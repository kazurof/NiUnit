 * assertThatの代替系列

is()
equalTo()
表明する(3, は(3).と同じである())
と同じである

sameTo()
同一のものである()


を含む
で始まる
で終わる


クラスのインスタンスである。



かつ

または

開きカッコ


閉じカッコ



ーーーーーーーーーーーーーーーーーーーーーー




anything() 
表明する(3, はなんでも良い())

allOf(Matcher<? extends T>... matchers) 
表明する(3, は(3).と(3 ).のどれとも合致する())

表明する("myValue", は("my").で始まる().かつ("Val").を含む())

３は４と５と６　のどれにも等しい

anyOf(Iterable<Matcher<? extends T>> matchers) 
表明する(3, は(3).と(3).と(3).のどれかと合致する());

表明する("myValue", は("my").で始まる().または("Val").を含む())
( X or Y )
表明する("myValue", は("my").である().または("Val").である())


( X and Y ) or Z
表明する("myValue", は『("my").で始まる().かつ("Val").を含む』().または("Z").で終わる())

 Z　or ( X and Y ) 

表明する("myValue", は("Z").で終わる.または『("my").で始まる().かつ("Val").を含む』())


and or は行ける。
括弧も一応これで

視認性の高い括弧は？


否定は？

含まない()
終わらない()
始まらない()





equalTo(T operand) 
表明する(3, は(3).である())


instanceOf(Class<?> type) 
表明する(3, は(Integer.class), のインスタンスである)

not(Matcher<T> matcher) 
表明する(false, は(true), と異なる)


notNullValue() 
表明する(null ,はnullである)

notNullValue() 
表明する(null ,はnullでない)
----------------------------------------------------------------

必要な機能

	// TODO 連結するような式の扱い。
かつ
または


型パラメータが
T
のものと
String
のもの。


--------------------------------------------------------------------


Assert.assert()系列

アノテーション

After
事後処理

AfterClass
クラス事後処理

事前処理
Before
クラス事前処理
BeforeClass

クラスルール
ClassRule

無視
Ignore

ルール
Rule

テスト
Test


