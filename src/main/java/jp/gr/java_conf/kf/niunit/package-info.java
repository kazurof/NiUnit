/**
 * 終わったリスト
 * 内部での論理式の持ち方を逆順にする。
 * 
 * 
 * runwith関連の調査
 *  org.junit.runners.BlockJUnit4ClassRunner の子クラスをrunwithで動かす。
 *  runwithそのものを日本語化できないか？？
 *  
 * 
 * ライブラリ名称を
 * niunit
 * に変更
 * 
 * {@link org.junit.runner.JUnitCore#main(String...)}を移植
 * とりあえずできた。
 * 
 * http://www7b.biglobe.ne.jp/~archer/tryjunit4/apidocs/org/hamcrest/core/IsInstanceOf.html
 * の対応
 * 
 * 
 * スイートの実行サンプル作成
 * 
 * 
 * 
 * 独立のmvnプロジェクト化
 * Version.javaの自動更新処理の追記
 * NetBeans 化
 * Java8移行
 * 
 * 
 * gitリポジトリの作り直し。
 * Dropbox移行 * 
 * 
 * parameterized　実装
 * 
 * 処理の戻り値の型を見直し。
 * 状態遷移的に整合するようにする。
 * 残タスクリスト -----------------------------------------------------------------
 * 
 * 
 * IsInstanceOfって何をテストしているのだろう？
 * 
 *  * ppt作成
 * 素材
 * 
 * ホームページ作成
 * pom.xml的なドキュメントサイトの作り方調査。
 * 
 * githubへアップ
 * 
 * 括弧対応へのテスト
 *      あるいは諦める？
 * 
 * 
 * 
 * 順序値マッチャーの開発
 * Comparableなもの
 * 
 * 
 *  * parameterized のテストをごっちり
 * 
 * カスタムマッチャーの作り方検討。
 * 作りやすくするような検討
 * テストの充実
 * 
 * サンプルコードの充実
 * テストケースのniunit化
 * 
 * 
 * 黒魔術適用の可能性検討
 * 特に、RunWithの除去について。
 「やり方さえ分かっちゃえば簡単なもんだね。これなら負ける気がしないわ」 
 
 
 * 公開リポジトリに追加する方法を検討
 * 
 * 
 * 
 * 

 * 
 * 諦めるリスト　ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
 *  * Rules
 * テストルール.javaを除去し、
 * 共通処理アノテーションがついたものを日本語テストランナーが処理する方向とする。
 * 各 TestRuleの子クラスは、更に子クラスを作成してメソッド名、クラス名を入れ替える。
 * ＝＞＞時間切れっぽい。
 * 
 * 
 * 後回しリスト　ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
 * 
 * 
 * 
 * 
 * 
 * {@link プッシュダウンレコード#マッチャーリスト}の長さが１だった時の対応
 * ジェネリック問題でできないっぽい。後回しか
 * 
 * Assumptions assumeThatの対応
 * 日本語構造的に無理がある。諦める？
 * 
 * @Ignore 対応。　忘れてたー
 * comparableへのテスト。
 * 次バージョンで頑張ろう。
 * 
 * nullでないのテスト
 * 
 */
package jp.gr.java_conf.kf.niunit;
