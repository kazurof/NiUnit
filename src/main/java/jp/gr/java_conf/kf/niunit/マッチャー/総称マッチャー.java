package jp.gr.java_conf.kf.niunit.マッチャー;

import org.hamcrest.Matcher;

import java.util.LinkedList;

public class 総称マッチャー<型> implements 総称マッチャー値受付状態<型>, 総称マッチャー終了状態<型>, 総称マッチャークラス受付状態<型> {
	public static <T> 総称マッチャー値受付状態<T> は(T value) {
		return new 総称マッチャー<>(value);
	}
	
	public static <T> 総称マッチャークラス受付状態<T> は(Class<T> value) {
		return new 総称マッチャー<>(value);
	}

	public static <T> 総称マッチャー値受付状態<T> はΓ(T value) {
		return new 総称マッチャー<>(value, 1);
	}

	public static <T> 総称マッチャー値受付状態<T> はΓΓ(T value) {
		return new 総称マッチャー<>(value, 2);
	}

	public static <T> 総称マッチャー値受付状態<T> はΓΓΓ(T value) {
		return new 総称マッチャー<>(value, 3);

	}

	LinkedList<プッシュダウンレコード<? super 型>> プッシュダウンテープ = new LinkedList<>();
	文処理状態 じょうたい;

	{
		this.じょうたい = 文処理状態.初期状態;
		this.プッシュダウンテープ.push(new プッシュダウンレコード<>());
	}

	総称マッチャー(型 あたい) {
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);
	}

	総称マッチャー(Class<型> あたい) {
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);
	}
	総称マッチャー(型 あたい, int 先頭開始括弧の数) {
		for (int i = 0; i < 先頭開始括弧の数; i++) {
			じょうたい = じょうたい.処理(プッシュダウンテープ, 括弧.Γ);
		}
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);
	}

	public 総称マッチャー終了状態<型> と同じである() {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 記号.と同じである);
		return this;
	}

	public 総称マッチャー終了状態<型> と同じでない() {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 記号.と同じでない);
		return this;
	}

	public 総称マッチャー終了状態<型> と同一である() {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 記号.と同一である);
		return this;
	}

	public 総称マッチャー終了状態<型> と同一でない() {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 記号.と同一でない);
		return this;
	}
	
	public 総称マッチャー終了状態<型> クラスのインスタンスである() {
		じょうたい = じょうたい.処理(プッシュダウンテープ, クラスのインスタンスである.インスタンス);
		return this;
	}

	
	public 総称マッチャー値受付状態<型> かつ(型 あたい) {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 結合子記号.かつ);
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);

		return this;
	}

	public 総称マッチャー値受付状態<型> かつΓ(型 あたい) {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 結合子記号.かつ);
		じょうたい = じょうたい.処理(プッシュダウンテープ, 括弧.Γ);
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);
		return this;
	}

	public 総称マッチャー値受付状態<型> または(型 あたい) {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 結合子記号.または);
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);
		return this;
	}

	public 総称マッチャー値受付状態<型> またはΓ(型 あたい) {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 結合子記号.または);
		じょうたい = じょうたい.処理(プッシュダウンテープ, 括弧.Γ);
		じょうたい = じょうたい.処理(プッシュダウンテープ, あたい);
		return this;
	}

    @Override
	public Matcher<? super 型> HamcrestMatcher取得() {
		return じょうたい.終了処理(プッシュダウンテープ);
	}

	public 総称マッチャー終了状態<型> 亅() {
		じょうたい = じょうたい.処理(プッシュダウンテープ, 括弧.亅);
		return this;
	}

	public 総称マッチャー終了状態<型> 亅亅() {
		// TODO 実装！！！
		return null;
	}

	public 総称マッチャー終了状態<型> 亅亅亅() {
		// TODO 実装！！！
		return null;
	}

	public 総称マッチャー値受付状態<型> Γ(型 あたい) {
		// TODO 実装！！！
		return null;
	}


	public 総称マッチャー値受付状態<型> ΓΓΓ(型 あたい) {
		// TODO 実装！！！
		return null;
	}

	public 総称マッチャー終了状態<型> と同じである亅() {
		 と同じである();
		 亅();
		return this;
	}

	public 総称マッチャー終了状態<型> と同じでない亅() {
		 と同じでない();
		 亅();
		return null;
	}

}
